<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200115 17:15:10.872" generator="Robot 3.1.2 (Python 2.7.12 on linux2)">
<suite source="/home/big/GO-PATH/api-sampran/robot/testsampran.robot" id="s1" name="Testsampran">
<test id="s1-t1" name="Test POST Doc registerUser">
<kw name="POST Doc registerUser">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:15:11.027" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:15:11.027" starttime="20200115 17:15:11.026"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:15:11.029" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:15:11.029" starttime="20200115 17:15:11.028"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user":${bc_user},"OrgDepartment":"org1.department1"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:15:11.030" level="INFO">${data} = {"bc_user":"123456","OrgDepartment":"org1.department1"}</msg>
<status status="PASS" endtime="20200115 17:15:11.030" starttime="20200115 17:15:11.030"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/registerUser</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:15:11.031" level="INFO">POST Request using : uri=/registerUser, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user":"123456","OrgDepartment":"org1.department1"} 
json=None</msg>
<msg timestamp="20200115 17:15:11.034" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:15:11.372" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:15:11.372" starttime="20200115 17:15:11.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:15:11.373" level="INFO">${json} = {u'message': u'Successfully registered blockchain user 123456 and imported it into the wallet', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:15:11.374" starttime="20200115 17:15:11.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:15:11.374" level="INFO">{u'message': u'Successfully registered blockchain user 123456 and imported it into the wallet', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:15:11.374" starttime="20200115 17:15:11.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:15:11.375" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:15:11.375" starttime="20200115 17:15:11.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:15:11.375" level="INFO">{"bc_user":"123456","OrgDepartment":"org1.department1"}</msg>
<status status="PASS" endtime="20200115 17:15:11.375" starttime="20200115 17:15:11.375"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:15:11.377" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:15:11.378" starttime="20200115 17:15:11.376"></status>
</kw>
<status status="PASS" endtime="20200115 17:15:11.378" starttime="20200115 17:15:11.025"></status>
</kw>
<status status="PASS" endtime="20200115 17:15:11.378" critical="yes" starttime="20200115 17:15:11.024"></status>
</test>
<test id="s1-t2" name="Test POST Doc IssueGarden">
<kw name="POST Doc IssueGarden">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:15:11.380" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:15:11.380" starttime="20200115 17:15:11.379"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:15:11.381" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:15:11.381" starttime="20200115 17:15:11.380"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": "123456","garden_id": "1","garden_name": "ลำไย","owner": "JoJo","areas": "13ไร่ 2งาน","date_final_use_chemical": "2019-7-3", "history_use_chemical": [ { "name_use_chemical": "toxic chemical" } ],"status": "อินทรีย์","path_image": ["/home/itsaraphap/Desktop/messageImage_1567519885643.jpg" ],"app_user": "bc_123","details": "พื้นที่สูงรกรากมีหน้าผา แห้งแล้ง"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:15:11.383" level="INFO">${data} = {"bc_user": "123456","garden_id": "1","garden_name": "ลำไย","owner": "JoJo","areas": "13ไร่ 2งาน","date_final_use_chemical": "2019-7-3", "history_use_chemical": [ { "name_use_chemical": "toxic chemica...</msg>
<status status="PASS" endtime="20200115 17:15:11.383" starttime="20200115 17:15:11.382"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssueGarden</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:15:11.384" level="INFO">POST Request using : uri=/IssueGarden, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","garden_id": "1","garden_name": "ลำไย","owner": "JoJo","areas": "13ไร่ 2งาน","date_final_use_chemical": "2019-7-3", "history_use_chemical": [ { "name_use_chemical": "toxic chemical" } ],"status": "อินทรีย์","path_image": ["/home/itsaraphap/Desktop/messageImage_1567519885643.jpg" ],"app_user": "bc_123","details": "พื้นที่สูงรกรากมีหน้าผา แห้งแล้ง"} 
json=None</msg>
<msg timestamp="20200115 17:15:11.386" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:10.227" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:10.227" starttime="20200115 17:15:11.383"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:10.228" level="INFO">${json} = {u'message': u'Request for [IssueGarden] CREATE GardenDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:10.228" starttime="20200115 17:16:10.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:10.229" level="INFO">{u'message': u'Request for [IssueGarden] CREATE GardenDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:10.229" starttime="20200115 17:16:10.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:10.230" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:10.230" starttime="20200115 17:16:10.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:10.232" level="INFO">{"bc_user": "123456","garden_id": "1","garden_name": "ลำไย","owner": "JoJo","areas": "13ไร่ 2งาน","date_final_use_chemical": "2019-7-3", "history_use_chemical": [ { "name_use_chemical": "toxic chemical" } ],"status": "อินทรีย์","path_image": ["/home/itsaraphap/Desktop/messageImage_1567519885643.jpg" ],"app_user": "bc_123","details": "พื้นที่สูงรกรากมีหน้าผา แห้งแล้ง"}</msg>
<status status="PASS" endtime="20200115 17:16:10.232" starttime="20200115 17:16:10.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:10.233" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:10.234" starttime="20200115 17:16:10.232"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:10.235" starttime="20200115 17:15:11.379"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:10.236" critical="yes" starttime="20200115 17:15:11.379"></status>
</test>
<test id="s1-t3" name="Test POST Doc IssuePlanYear">
<kw name="POST Doc IssuePlanYear">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:10.241" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:10.242" starttime="20200115 17:16:10.239"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:10.245" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:10.245" starttime="20200115 17:16:10.243"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"planyear_date": "2018-08-04","app_user": "สมชาย1","user_name": "นายสมชาย สมใจ","group_name": "ไร่สมชาย","garden_id": "1","agri_standard": "Ifoam","register_appuser": "22/01/2000"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:10.246" level="INFO">${data} = {"bc_user": "123456","planyear_date": "2018-08-04","app_user": "สมชาย1","user_name": "นายสมชาย สมใจ","group_name": "ไร่สมชาย","garden_id": "1","agri_standard": "Ifoam","register_appuser": "22/01/2000"...</msg>
<status status="PASS" endtime="20200115 17:16:10.246" starttime="20200115 17:16:10.245"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssuePlanYear</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:10.248" level="INFO">POST Request using : uri=/IssuePlanYear, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","planyear_date": "2018-08-04","app_user": "สมชาย1","user_name": "นายสมชาย สมใจ","group_name": "ไร่สมชาย","garden_id": "1","agri_standard": "Ifoam","register_appuser": "22/01/2000"} 
json=None</msg>
<msg timestamp="20200115 17:16:10.249" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:12.515" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:12.515" starttime="20200115 17:16:10.247"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:12.518" level="INFO">${json} = {u'message': u'Request for [IssuePlanYear] CREATE PlanYearDoc|5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4efc058fdf554 and UPDATE GardenDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e...</msg>
<status status="PASS" endtime="20200115 17:16:12.518" starttime="20200115 17:16:12.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:12.520" level="INFO">{u'message': u'Request for [IssuePlanYear] CREATE PlanYearDoc|5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4efc058fdf554 and UPDATE GardenDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:12.520" starttime="20200115 17:16:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:12.522" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:12.522" starttime="20200115 17:16:12.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:12.523" level="INFO">{"bc_user": "123456","planyear_date": "2018-08-04","app_user": "สมชาย1","user_name": "นายสมชาย สมใจ","group_name": "ไร่สมชาย","garden_id": "1","agri_standard": "Ifoam","register_appuser": "22/01/2000"}</msg>
<status status="PASS" endtime="20200115 17:16:12.523" starttime="20200115 17:16:12.523"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:12.526" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:12.526" starttime="20200115 17:16:12.524"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:12.526" starttime="20200115 17:16:10.238"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:12.526" critical="yes" starttime="20200115 17:16:10.237"></status>
</test>
<test id="s1-t4" name="Test POST Doc IssuePlanting">
<kw name="POST Doc IssuePlanting">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:12.530" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:12.531" starttime="20200115 17:16:12.530"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:12.533" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:12.533" starttime="20200115 17:16:12.531"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"app_user": "สมชาย1","plant_id": "2","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","path_images": "/home/sampran/images.jp","predict_harvest": "2019-10-19","predict_quantity": 1000,"update_date": "2018-10-13"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:12.535" level="INFO">${data} = {"bc_user": "123456","app_user": "สมชาย1","plant_id": "2","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-...</msg>
<status status="PASS" endtime="20200115 17:16:12.535" starttime="20200115 17:16:12.534"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssuePlanting</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:12.536" level="INFO">POST Request using : uri=/IssuePlanting, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","app_user": "สมชาย1","plant_id": "2","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","path_images": "/home/sampran/images.jp","predict_harvest": "2019-10-19","predict_quantity": 1000,"update_date": "2018-10-13"} 
json=None</msg>
<msg timestamp="20200115 17:16:12.538" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:14.810" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:14.810" starttime="20200115 17:16:12.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:14.812" level="INFO">${json} = {u'message': u'Request for [IssuePlanting] CREATE PlantDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 and UPDATE PlanYearDoc|5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4e...</msg>
<status status="PASS" endtime="20200115 17:16:14.812" starttime="20200115 17:16:14.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:14.813" level="INFO">{u'message': u'Request for [IssuePlanting] CREATE PlantDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 and UPDATE PlanYearDoc|5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4efc058fdf554 ,GardenDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:14.813" starttime="20200115 17:16:14.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:14.814" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:14.814" starttime="20200115 17:16:14.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:14.814" level="INFO">{"bc_user": "123456","app_user": "สมชาย1","plant_id": "2","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","path_images": "/home/sampran/images.jp","predict_harvest": "2019-10-19","predict_quantity": 1000,"update_date": "2018-10-13"}</msg>
<status status="PASS" endtime="20200115 17:16:14.814" starttime="20200115 17:16:14.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:14.816" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:14.817" starttime="20200115 17:16:14.814"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:14.817" starttime="20200115 17:16:12.528"></status>
</kw>
<kw name="POST Doc IssuePlanting2">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:14.820" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:14.821" starttime="20200115 17:16:14.819"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:14.824" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:14.824" starttime="20200115 17:16:14.822"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"app_user": "สมชาย1","plant_id": "3","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","path_images": "/home/sampran/images.jp","predict_harvest": "2019-10-19","predict_quantity": 1000,"update_date": "2018-10-13"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:14.826" level="INFO">${data} = {"bc_user": "123456","app_user": "สมชาย1","plant_id": "3","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-...</msg>
<status status="PASS" endtime="20200115 17:16:14.826" starttime="20200115 17:16:14.825"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssuePlanting</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:14.829" level="INFO">POST Request using : uri=/IssuePlanting, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","app_user": "สมชาย1","plant_id": "3","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","path_images": "/home/sampran/images.jp","predict_harvest": "2019-10-19","predict_quantity": 1000,"update_date": "2018-10-13"} 
json=None</msg>
<msg timestamp="20200115 17:16:14.830" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:17.088" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:17.088" starttime="20200115 17:16:14.827"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:17.092" level="INFO">${json} = {u'message': u'Request for [IssuePlanting] CREATE PlantDoc|d700e360918b491470b0d680668e56dcbbc161f56493afbca2a75fa642f63b66 and UPDATE PlanYearDoc|5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4e...</msg>
<status status="PASS" endtime="20200115 17:16:17.092" starttime="20200115 17:16:17.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:17.095" level="INFO">{u'message': u'Request for [IssuePlanting] CREATE PlantDoc|d700e360918b491470b0d680668e56dcbbc161f56493afbca2a75fa642f63b66 and UPDATE PlanYearDoc|5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4efc058fdf554 ,GardenDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:17.095" starttime="20200115 17:16:17.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:17.095" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:17.095" starttime="20200115 17:16:17.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:17.097" level="INFO">{"bc_user": "123456","app_user": "สมชาย1","plant_id": "3","plant_name": "สวน","seed_type": "ต้นกล้า","reproduction_type": "ปักชำ", "seed_marketplace": "LemonFarm","garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","path_images": "/home/sampran/images.jp","predict_harvest": "2019-10-19","predict_quantity": 1000,"update_date": "2018-10-13"}</msg>
<status status="PASS" endtime="20200115 17:16:17.097" starttime="20200115 17:16:17.096"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:17.099" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:17.100" starttime="20200115 17:16:17.097"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:17.100" starttime="20200115 17:16:14.818"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:17.101" critical="yes" starttime="20200115 17:16:12.527"></status>
</test>
<test id="s1-t5" name="Test PUT Doc AddManagePlanting">
<kw name="PUT Doc AddManagePlanting">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:17.105" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:17.106" starttime="20200115 17:16:17.105"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:17.109" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:17.109" starttime="20200115 17:16:17.107"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"app_user": "Jirapon0150","plant_id": "2","production_id": "1","production_name": "รดน้ำ","activities_detail": "รดน้ำวันละ3ครั้ง","production_date": "2018-08-04","production_factor": "ฝักบัว","garden_id": "1","planyear_date": "2018-08-04"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:17.111" level="INFO">${data} = {"bc_user": "123456","app_user": "Jirapon0150","plant_id": "2","production_id": "1","production_name": "รดน้ำ","activities_detail": "รดน้ำวันละ3ครั้ง","production_date": "2018-08-04","production_facto...</msg>
<status status="PASS" endtime="20200115 17:16:17.111" starttime="20200115 17:16:17.110"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/AddManagePlanting</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:17.112" level="INFO">PUT Request using : uri=/AddManagePlanting, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","app_user": "Jirapon0150","plant_id": "2","production_id": "1","production_name": "รดน้ำ","activities_detail": "รดน้ำวันละ3ครั้ง","production_date": "2018-08-04","production_factor": "ฝักบัว","garden_id": "1","planyear_date": "2018-08-04"} 
json=None</msg>
<msg timestamp="20200115 17:16:17.113" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:19.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:19.367" starttime="20200115 17:16:17.112"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:19.368" level="INFO">${json} = {u'message': u'Request for [AddManagePlanting] UPDATE PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:19.369" starttime="20200115 17:16:19.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:19.370" level="INFO">{u'message': u'Request for [AddManagePlanting] UPDATE PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:19.370" starttime="20200115 17:16:19.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:19.371" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:19.371" starttime="20200115 17:16:19.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:19.371" level="INFO">{"bc_user": "123456","app_user": "Jirapon0150","plant_id": "2","production_id": "1","production_name": "รดน้ำ","activities_detail": "รดน้ำวันละ3ครั้ง","production_date": "2018-08-04","production_factor": "ฝักบัว","garden_id": "1","planyear_date": "2018-08-04"}</msg>
<status status="PASS" endtime="20200115 17:16:19.371" starttime="20200115 17:16:19.371"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:19.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:19.372" starttime="20200115 17:16:19.371"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:19.372" starttime="20200115 17:16:17.103"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:19.373" critical="yes" starttime="20200115 17:16:17.102"></status>
</test>
<test id="s1-t6" name="Test PUT Doc AddHarvest">
<kw name="PUT Doc AddHarvest">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:19.378" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:19.379" starttime="20200115 17:16:19.377"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:19.380" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:19.380" starttime="20200115 17:16:19.379"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"plant_id": "2","harvest_id": "1","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": "100","product_grade_c": "100","product_grade_d": "100","product_grade_e": "100","product_total_bad": "100","unit": "ผล","process_image": "cp/git/stock/produck1.png","product_image": "cp/git/stock/produck2.png","harvest_status": "คงค้าง","tools": "รถไถ","garden_id": "1","planyear_date": "2018-08-04"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:19.381" level="INFO">${data} = {"bc_user": "123456","plant_id": "2","harvest_id": "1","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": ...</msg>
<status status="PASS" endtime="20200115 17:16:19.382" starttime="20200115 17:16:19.380"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/AddHarvest</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:19.384" level="INFO">PUT Request using : uri=/AddHarvest, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","plant_id": "2","harvest_id": "1","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": "100","product_grade_c": "100","product_grade_d": "100","product_grade_e": "100","product_total_bad": "100","unit": "ผล","process_image": "cp/git/stock/produck1.png","product_image": "cp/git/stock/produck2.png","harvest_status": "คงค้าง","tools": "รถไถ","garden_id": "1","planyear_date": "2018-08-04"} 
json=None</msg>
<msg timestamp="20200115 17:16:19.385" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:21.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:21.637" starttime="20200115 17:16:19.382"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:21.640" level="INFO">${json} = {u'message': u'Request for [AddHarvest] UPDATE  Harvest|26866cd19a75623380adf0b5c4f11eadd4a5c4bf4e1acb2036fdd8e2170c30ea and PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e...</msg>
<status status="PASS" endtime="20200115 17:16:21.640" starttime="20200115 17:16:21.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:21.643" level="INFO">{u'message': u'Request for [AddHarvest] UPDATE  Harvest|26866cd19a75623380adf0b5c4f11eadd4a5c4bf4e1acb2036fdd8e2170c30ea and PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:21.644" starttime="20200115 17:16:21.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:21.644" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:21.644" starttime="20200115 17:16:21.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:21.645" level="INFO">{"bc_user": "123456","plant_id": "2","harvest_id": "1","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": "100","product_grade_c": "100","product_grade_d": "100","product_grade_e": "100","product_total_bad": "100","unit": "ผล","process_image": "cp/git/stock/produck1.png","product_image": "cp/git/stock/produck2.png","harvest_status": "คงค้าง","tools": "รถไถ","garden_id": "1","planyear_date": "2018-08-04"}</msg>
<status status="PASS" endtime="20200115 17:16:21.645" starttime="20200115 17:16:21.644"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:21.645" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:21.645" starttime="20200115 17:16:21.645"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:21.645" starttime="20200115 17:16:19.377"></status>
</kw>
<kw name="PUT Doc AddHarvest2">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:21.647" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:21.649" starttime="20200115 17:16:21.646"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:21.650" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:21.650" starttime="20200115 17:16:21.649"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"plant_id": "2","harvest_id": "2","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": "100","product_grade_c": "100","product_grade_d": "100","product_grade_e": "100","product_total_bad": "100","unit": "ผล","process_image": "cp/git/stock/produck1.png","product_image": "cp/git/stock/produck2.png","harvest_status": "คงค้าง","tools": "รถไถ","garden_id": "1","planyear_date": "2018-08-04"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:21.653" level="INFO">${data} = {"bc_user": "123456","plant_id": "2","harvest_id": "2","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": ...</msg>
<status status="PASS" endtime="20200115 17:16:21.653" starttime="20200115 17:16:21.651"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/AddHarvest</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:21.653" level="INFO">PUT Request using : uri=/AddHarvest, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","plant_id": "2","harvest_id": "2","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": "100","product_grade_c": "100","product_grade_d": "100","product_grade_e": "100","product_total_bad": "100","unit": "ผล","process_image": "cp/git/stock/produck1.png","product_image": "cp/git/stock/produck2.png","harvest_status": "คงค้าง","tools": "รถไถ","garden_id": "1","planyear_date": "2018-08-04"} 
json=None</msg>
<msg timestamp="20200115 17:16:21.654" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:23.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:23.892" starttime="20200115 17:16:21.653"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:23.893" level="INFO">${json} = {u'message': u'Request for [AddHarvest] UPDATE  Harvest|52abc6f0fae508e9aa940921f40d3385b45cfa4183624718b30310e7c64041b6 and PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e...</msg>
<status status="PASS" endtime="20200115 17:16:23.893" starttime="20200115 17:16:23.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:23.894" level="INFO">{u'message': u'Request for [AddHarvest] UPDATE  Harvest|52abc6f0fae508e9aa940921f40d3385b45cfa4183624718b30310e7c64041b6 and PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:23.895" starttime="20200115 17:16:23.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:23.897" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:23.898" starttime="20200115 17:16:23.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:23.901" level="INFO">{"bc_user": "123456","plant_id": "2","harvest_id": "2","lot_no": "19902","harvest_transform_check": "yes","app_user": "123456","harvest_date": "2020-12-20","product_grade_a": "100","product_grade_b": "100","product_grade_c": "100","product_grade_d": "100","product_grade_e": "100","product_total_bad": "100","unit": "ผล","process_image": "cp/git/stock/produck1.png","product_image": "cp/git/stock/produck2.png","harvest_status": "คงค้าง","tools": "รถไถ","garden_id": "1","planyear_date": "2018-08-04"}</msg>
<status status="PASS" endtime="20200115 17:16:23.901" starttime="20200115 17:16:23.899"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:23.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:23.903" starttime="20200115 17:16:23.902"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:23.903" starttime="20200115 17:16:21.646"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:23.903" critical="yes" starttime="20200115 17:16:19.374"></status>
</test>
<test id="s1-t7" name="Test PUT Doc AddSelling">
<kw name="PUT Doc AddSelling">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:23.912" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:23.913" starttime="20200115 17:16:23.911"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:23.916" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:23.917" starttime="20200115 17:16:23.914"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"selling_id": "1","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11","lot_no": "2020-12-20","app_user": "123456"}],"garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","plant_id": "2"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:23.918" level="INFO">${data} = {"bc_user": "123456","selling_id": "1","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11",...</msg>
<status status="PASS" endtime="20200115 17:16:23.919" starttime="20200115 17:16:23.917"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/AddSelling</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:23.920" level="INFO">PUT Request using : uri=/AddSelling, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","selling_id": "1","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11","lot_no": "2020-12-20","app_user": "123456"}],"garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","plant_id": "2"} 
json=None</msg>
<msg timestamp="20200115 17:16:23.924" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:26.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:26.153" starttime="20200115 17:16:23.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:26.156" level="INFO">${json} = {u'message': u'Request for [AddSelling] CREATE Selling|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b and UPDATE PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a926594...</msg>
<status status="PASS" endtime="20200115 17:16:26.156" starttime="20200115 17:16:26.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:26.157" level="INFO">{u'message': u'Request for [AddSelling] CREATE Selling|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b and UPDATE PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:26.157" starttime="20200115 17:16:26.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:26.159" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:26.160" starttime="20200115 17:16:26.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:26.162" level="INFO">{"bc_user": "123456","selling_id": "1","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11","lot_no": "2020-12-20","app_user": "123456"}],"garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","plant_id": "2"}</msg>
<status status="PASS" endtime="20200115 17:16:26.162" starttime="20200115 17:16:26.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:26.165" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:26.165" starttime="20200115 17:16:26.163"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:26.165" starttime="20200115 17:16:23.906"></status>
</kw>
<kw name="PUT Doc AddSelling2">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:26.166" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:26.167" starttime="20200115 17:16:26.166"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:26.170" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:26.170" starttime="20200115 17:16:26.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"selling_id": "2","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11","lot_no": "2020-12-20","app_user": "123456"}],"garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","plant_id": "2"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:26.170" level="INFO">${data} = {"bc_user": "123456","selling_id": "2","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11",...</msg>
<status status="PASS" endtime="20200115 17:16:26.170" starttime="20200115 17:16:26.170"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/AddSelling</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:26.171" level="INFO">PUT Request using : uri=/AddSelling, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","selling_id": "2","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11","lot_no": "2020-12-20","app_user": "123456"}],"garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","plant_id": "2"} 
json=None</msg>
<msg timestamp="20200115 17:16:26.172" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:28.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:28.418" starttime="20200115 17:16:26.171"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:28.420" level="INFO">${json} = {u'message': u'Request for [AddSelling] CREATE Selling|d4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35 and UPDATE PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a926594...</msg>
<status status="PASS" endtime="20200115 17:16:28.420" starttime="20200115 17:16:28.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:28.423" level="INFO">{u'message': u'Request for [AddSelling] CREATE Selling|d4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35 and UPDATE PlantingDoc|472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:28.423" starttime="20200115 17:16:28.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:28.425" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:28.425" starttime="20200115 17:16:28.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:28.427" level="INFO">{"bc_user": "123456","selling_id": "2","selling_list": [{"sold_grade_a": 50,"sold_grade_b": 30,"sold_grade_c": 20,"sold_grade_d": 50,"sold_grade_e": 50,"buyer": "darkmarket","sold_date": "2019-10-11","lot_no": "2020-12-20","app_user": "123456"}],"garden_id": "1","plant_date": "2018-08-04","planyear_date": "2018-08-04","plant_id": "2"}</msg>
<status status="PASS" endtime="20200115 17:16:28.427" starttime="20200115 17:16:28.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:28.428" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:28.429" starttime="20200115 17:16:28.427"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:28.430" starttime="20200115 17:16:26.166"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:28.431" critical="yes" starttime="20200115 17:16:23.904"></status>
</test>
<test id="s1-t8" name="Test POST Doc IssueStock">
<kw name="POST Doc IssueStock">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:28.436" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:28.436" starttime="20200115 17:16:28.435"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:28.441" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:28.441" starttime="20200115 17:16:28.437"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user}, "app_user": "ธนพล", "Owner": "Ohmsum", "Location": "Ekkamai28", "CreateDate": "2019-10-19"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:28.442" level="INFO">${data} = {"bc_user": "123456", "app_user": "ธนพล", "Owner": "Ohmsum", "Location": "Ekkamai28", "CreateDate": "2019-10-19"}</msg>
<status status="PASS" endtime="20200115 17:16:28.442" starttime="20200115 17:16:28.442"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssueStock</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:28.443" level="INFO">POST Request using : uri=/IssueStock, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456", "app_user": "ธนพล", "Owner": "Ohmsum", "Location": "Ekkamai28", "CreateDate": "2019-10-19"} 
json=None</msg>
<msg timestamp="20200115 17:16:28.444" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:30.651" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:30.651" starttime="20200115 17:16:28.443"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:30.653" level="INFO">${json} = {u'message': u'Request for [IssueStock] CREATE StockDoc|c2d8bfb3f5041de5b74349e506a09b77dce690225582a3a3d3459eee0ac0e9b3 : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:30.653" starttime="20200115 17:16:30.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:30.655" level="INFO">{u'message': u'Request for [IssueStock] CREATE StockDoc|c2d8bfb3f5041de5b74349e506a09b77dce690225582a3a3d3459eee0ac0e9b3 : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:30.655" starttime="20200115 17:16:30.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:30.658" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:30.658" starttime="20200115 17:16:30.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:30.659" level="INFO">{"bc_user": "123456", "app_user": "ธนพล", "Owner": "Ohmsum", "Location": "Ekkamai28", "CreateDate": "2019-10-19"}</msg>
<status status="PASS" endtime="20200115 17:16:30.659" starttime="20200115 17:16:30.658"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:30.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:30.660" starttime="20200115 17:16:30.660"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:30.660" starttime="20200115 17:16:28.434"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:30.661" critical="yes" starttime="20200115 17:16:28.433"></status>
</test>
<test id="s1-t9" name="Test PUT Doc IssuePrepareStock">
<kw name="PUT Doc IssuePrepareStock">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:30.667" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:30.668" starttime="20200115 17:16:30.666"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:30.669" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:30.669" starttime="20200115 17:16:30.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user}, "app_user": "ธนพล", "id": 1, "product_unit_id": 3, "product_unit_name": "ห่อ", "name": "พลั่ว", "is_diy": "ture", "buy_from": "7-11", "price": 120, "quantity": 12, "image": "cp/git/stock/produck1.png"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:30.671" level="INFO">${data} = {"bc_user": "123456", "app_user": "ธนพล", "id": 1, "product_unit_id": 3, "product_unit_name": "ห่อ", "name": "พลั่ว", "is_diy": "ture", "buy_from": "7-11", "price": 120, "quantity": 12, "image": "cp/g...</msg>
<status status="PASS" endtime="20200115 17:16:30.671" starttime="20200115 17:16:30.669"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssuePrepareStock</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:30.674" level="INFO">PUT Request using : uri=/IssuePrepareStock, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456", "app_user": "ธนพล", "id": 1, "product_unit_id": 3, "product_unit_name": "ห่อ", "name": "พลั่ว", "is_diy": "ture", "buy_from": "7-11", "price": 120, "quantity": 12, "image": "cp/git/stock/produck1.png"} 
json=None</msg>
<msg timestamp="20200115 17:16:30.676" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:32.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:32.884" starttime="20200115 17:16:30.672"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:32.887" level="INFO">${json} = {u'message': u'Request for [IssuePrepareStock] UPDATE StockDoc|c2d8bfb3f5041de5b74349e506a09b77dce690225582a3a3d3459eee0ac0e9b3 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:32.888" starttime="20200115 17:16:32.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:32.888" level="INFO">{u'message': u'Request for [IssuePrepareStock] UPDATE StockDoc|c2d8bfb3f5041de5b74349e506a09b77dce690225582a3a3d3459eee0ac0e9b3 : ', u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:32.888" starttime="20200115 17:16:32.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:32.889" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:32.889" starttime="20200115 17:16:32.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:32.892" level="INFO">{"bc_user": "123456", "app_user": "ธนพล", "id": 1, "product_unit_id": 3, "product_unit_name": "ห่อ", "name": "พลั่ว", "is_diy": "ture", "buy_from": "7-11", "price": 120, "quantity": 12, "image": "cp/git/stock/produck1.png"}</msg>
<status status="PASS" endtime="20200115 17:16:32.892" starttime="20200115 17:16:32.889"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:32.893" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:32.894" starttime="20200115 17:16:32.893"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:32.895" starttime="20200115 17:16:30.665"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:32.895" critical="yes" starttime="20200115 17:16:30.663"></status>
</test>
<test id="s1-t10" name="Test Post Doc IssueProduct">
<kw name="POST Doc IssueProduct">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:32.898" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:32.899" starttime="20200115 17:16:32.897"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:32.901" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:32.901" starttime="20200115 17:16:32.899"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user}, "plant_info": [ { "garden_id": 1, "planyear_date": "2018-08-04", "plant_id": 2 } ], "lotNo": "1", "product_name": "Weedy", "product_image": "cp/git/stock/produck2.png"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:32.903" level="INFO">${data} = {"bc_user": "123456", "plant_info": [ { "garden_id": 1, "planyear_date": "2018-08-04", "plant_id": 2 } ], "lotNo": "1", "product_name": "Weedy", "product_image": "cp/git/stock/produck2.png"}</msg>
<status status="PASS" endtime="20200115 17:16:32.903" starttime="20200115 17:16:32.901"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/IssueProduct</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:32.905" level="INFO">POST Request using : uri=/IssueProduct, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456", "plant_info": [ { "garden_id": 1, "planyear_date": "2018-08-04", "plant_id": 2 } ], "lotNo": "1", "product_name": "Weedy", "product_image": "cp/git/stock/produck2.png"} 
json=None</msg>
<msg timestamp="20200115 17:16:32.906" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:35.173" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:35.173" starttime="20200115 17:16:32.904"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:35.179" level="INFO">${json} = {u'message': u'Request for [IssueProduct] CREATE ProductDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:35.179" starttime="20200115 17:16:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:35.180" level="INFO">{u'message': u'Request for [IssueProduct] CREATE ProductDoc|6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:35.180" starttime="20200115 17:16:35.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:35.181" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:35.181" starttime="20200115 17:16:35.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:35.183" level="INFO">{"bc_user": "123456", "plant_info": [ { "garden_id": 1, "planyear_date": "2018-08-04", "plant_id": 2 } ], "lotNo": "1", "product_name": "Weedy", "product_image": "cp/git/stock/produck2.png"}</msg>
<status status="PASS" endtime="20200115 17:16:35.183" starttime="20200115 17:16:35.182"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:35.185" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:35.186" starttime="20200115 17:16:35.184"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:35.187" starttime="20200115 17:16:32.897"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:35.188" critical="yes" starttime="20200115 17:16:32.896"></status>
</test>
<test id="s1-t11" name="Test POST Doc Verify">
<kw name="POST Doc Verify">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:35.191" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:35.193" starttime="20200115 17:16:35.190"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:35.197" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:35.197" starttime="20200115 17:16:35.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user}, "plant_info": [ { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "2" }, { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "3" } ], "issue_date": "2018-12-21", "id": "3", "company_id": "1", "user_id": "4", "is_pass": "1", "is_approve": "null", "is_draft": "1", "inspect_date": "2019-11-18", "inspect_start_time": "12:00:00", "inspect_end_time": "17:00:00", "approve_start_date": "null", "approve_end_date": "null", "remark": "null", "data": { "inspect_type": { "type": "ตรวจโดยไม่แจ้งล่วงหน้า", "year": "null" }, "standard_type": { "type": "PGS", "year": "null" }, "consideration_for_approve": { "plan_product_support_standard": [ { "product_id": "1", "name": "ผักสลัด" }, { "product_id": "15", "name": "สลัด" } ], "approvement_and_condition": "123", "period_of_change": "123", "plan_product_unsupport_standard": [ { "product_id": "ยี่หร่า", "name": "ยี่หร่า" } ], "next_inspection": "fdsafdaf" }, "farm_document": { "prepare_plating": "มี", "farm_plan_document": "มี", "organic_standard": "มี", "prepare_plating_is_completely": "ต้องปรับปรุง", "prepare_plating_describe": "รายละเอียดปรับปรุง", "farm_plan_document_is_completely": "ต้องปรับปรุง", "farm_plan_document_describe": "รายละเอียดปรับปรุง", "organic_standard_describe": "รายละเอียดปรับปรุง" }, "planting_data": { "info": "ข้อมูลตามแผน" }, "inspection_scope": { "is_all_oranic_garden": "true", "remark": "123" }, "user_sign_data": { "farmer": { "sign_image": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png", "sign_date": "2019-12-17" }, "inspector": { "sign_image": "null", "sign_date": "2018-12-17", "sign_image_upload": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png" }, "endorser": { "sign_image": "null", "sign_date": "2019-12-17", "sign_image_upload": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png" } } }, "user_fullname": "บุญล้อม เรืองแสง", "user_farmer_code": "FAR0004", "user_address": "27 หมู่5 ", "user_latitude": "12.59968640", "user_longitude": "99.54296710", "zip_code": "76170", "district_name": "ป่าเด็ง", "amphur_name": "แก่งกระจาน", "province_name": "เพชรบุรี", "user_phone": "0868665456", "group_id": "1", "group_name": "organic", "garden_name": "แปลงที่ 1", "problem_images": [ { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_problem/inspection_verifier_problem-5de09c75b41b60.30134576.png" }, { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_problem/inspection_verifier_problem-5de0d0e3265458.89572852.png" } ], "report_images": [ { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_report/inspection_verifier_report-5de09c7e7c6894.79609671.png" } ]}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:35.197" level="INFO">${data} = {"bc_user": "123456", "plant_info": [ { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "2" }, { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "3" } ], "issue_date": "2018-...</msg>
<status status="PASS" endtime="20200115 17:16:35.197" starttime="20200115 17:16:35.197"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/Verify</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:35.199" level="INFO">POST Request using : uri=/Verify, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456", "plant_info": [ { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "2" }, { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "3" } ], "issue_date": "2018-12-21", "id": "3", "company_id": "1", "user_id": "4", "is_pass": "1", "is_approve": "null", "is_draft": "1", "inspect_date": "2019-11-18", "inspect_start_time": "12:00:00", "inspect_end_time": "17:00:00", "approve_start_date": "null", "approve_end_date": "null", "remark": "null", "data": { "inspect_type": { "type": "ตรวจโดยไม่แจ้งล่วงหน้า", "year": "null" }, "standard_type": { "type": "PGS", "year": "null" }, "consideration_for_approve": { "plan_product_support_standard": [ { "product_id": "1", "name": "ผักสลัด" }, { "product_id": "15", "name": "สลัด" } ], "approvement_and_condition": "123", "period_of_change": "123", "plan_product_unsupport_standard": [ { "product_id": "ยี่หร่า", "name": "ยี่หร่า" } ], "next_inspection": "fdsafdaf" }, "farm_document": { "prepare_plating": "มี", "farm_plan_document": "มี", "organic_standard": "มี", "prepare_plating_is_completely": "ต้องปรับปรุง", "prepare_plating_describe": "รายละเอียดปรับปรุง", "farm_plan_document_is_completely": "ต้องปรับปรุง", "farm_plan_document_describe": "รายละเอียดปรับปรุง", "organic_standard_describe": "รายละเอียดปรับปรุง" }, "planting_data": { "info": "ข้อมูลตามแผน" }, "inspection_scope": { "is_all_oranic_garden": "true", "remark": "123" }, "user_sign_data": { "farmer": { "sign_image": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png", "sign_date": "2019-12-17" }, "inspector": { "sign_image": "null", "sign_date": "2018-12-17", "sign_image_upload": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png" }, "endorser": { "sign_image": "null", "sign_date": "2019-12-17", "sign_image_upload": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png" } } }, "user_fullname": "บุญล้อม เรืองแสง", "user_farmer_code": "FAR0004", "user_address": "27 หมู่5 ", "user_latitude": "12.59968640", "user_longitude": "99.54296710", "zip_code": "76170", "district_name": "ป่าเด็ง", "amphur_name": "แก่งกระจาน", "province_name": "เพชรบุรี", "user_phone": "0868665456", "group_id": "1", "group_name": "organic", "garden_name": "แปลงที่ 1", "problem_images": [ { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_problem/inspection_verifier_problem-5de09c75b41b60.30134576.png" }, { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_problem/inspection_verifier_problem-5de0d0e3265458.89572852.png" } ], "report_images": [ { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_report/inspection_verifier_report-5de09c7e7c6894.79609671.png" } ]} 
json=None</msg>
<msg timestamp="20200115 17:16:35.202" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:37.485" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:37.486" starttime="20200115 17:16:35.198"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:37.491" level="INFO">${json} = {u'message': u'Request for [Printverifyform] CREATE VerifyDoc|312e36040449f64d91c739f43f4fda6f6512bd2bed967fb11550b3013ddf889d : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:37.491" starttime="20200115 17:16:37.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:37.492" level="INFO">{u'message': u'Request for [Printverifyform] CREATE VerifyDoc|312e36040449f64d91c739f43f4fda6f6512bd2bed967fb11550b3013ddf889d : ', u'statusCode': 201}</msg>
<status status="PASS" endtime="20200115 17:16:37.493" starttime="20200115 17:16:37.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:37.495" level="INFO">&lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:37.496" starttime="20200115 17:16:37.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:37.497" level="INFO">{"bc_user": "123456", "plant_info": [ { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "2" }, { "garden_id": "1", "planyear_date": "2018-08-04", "plant_id": "3" } ], "issue_date": "2018-12-21", "id": "3", "company_id": "1", "user_id": "4", "is_pass": "1", "is_approve": "null", "is_draft": "1", "inspect_date": "2019-11-18", "inspect_start_time": "12:00:00", "inspect_end_time": "17:00:00", "approve_start_date": "null", "approve_end_date": "null", "remark": "null", "data": { "inspect_type": { "type": "ตรวจโดยไม่แจ้งล่วงหน้า", "year": "null" }, "standard_type": { "type": "PGS", "year": "null" }, "consideration_for_approve": { "plan_product_support_standard": [ { "product_id": "1", "name": "ผักสลัด" }, { "product_id": "15", "name": "สลัด" } ], "approvement_and_condition": "123", "period_of_change": "123", "plan_product_unsupport_standard": [ { "product_id": "ยี่หร่า", "name": "ยี่หร่า" } ], "next_inspection": "fdsafdaf" }, "farm_document": { "prepare_plating": "มี", "farm_plan_document": "มี", "organic_standard": "มี", "prepare_plating_is_completely": "ต้องปรับปรุง", "prepare_plating_describe": "รายละเอียดปรับปรุง", "farm_plan_document_is_completely": "ต้องปรับปรุง", "farm_plan_document_describe": "รายละเอียดปรับปรุง", "organic_standard_describe": "รายละเอียดปรับปรุง" }, "planting_data": { "info": "ข้อมูลตามแผน" }, "inspection_scope": { "is_all_oranic_garden": "true", "remark": "123" }, "user_sign_data": { "farmer": { "sign_image": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png", "sign_date": "2019-12-17" }, "inspector": { "sign_image": "null", "sign_date": "2018-12-17", "sign_image_upload": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png" }, "endorser": { "sign_image": "null", "sign_date": "2019-12-17", "sign_image_upload": "/upload/inspection_verifier_sign/inspection_verifier_sign-5dde43d6710a62.93582640.png" } } }, "user_fullname": "บุญล้อม เรืองแสง", "user_farmer_code": "FAR0004", "user_address": "27 หมู่5 ", "user_latitude": "12.59968640", "user_longitude": "99.54296710", "zip_code": "76170", "district_name": "ป่าเด็ง", "amphur_name": "แก่งกระจาน", "province_name": "เพชรบุรี", "user_phone": "0868665456", "group_id": "1", "group_name": "organic", "garden_name": "แปลงที่ 1", "problem_images": [ { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_problem/inspection_verifier_problem-5de09c75b41b60.30134576.png" }, { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_problem/inspection_verifier_problem-5de0d0e3265458.89572852.png" } ], "report_images": [ { "id": "6", "inspect_verifier_id": "3", "image_path": "/upload/inspection_verifier_report/inspection_verifier_report-5de09c7e7c6894.79609671.png" } ]}</msg>
<status status="PASS" endtime="20200115 17:16:37.497" starttime="20200115 17:16:37.496"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>201</arg>
</arguments>
<msg timestamp="20200115 17:16:37.497" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:37.498" starttime="20200115 17:16:37.497"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:37.498" starttime="20200115 17:16:35.189"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:37.499" critical="yes" starttime="20200115 17:16:35.188"></status>
</test>
<test id="s1-t12" name="Test POST Doc queryMainpage">
<kw name="POST Doc queryMainpage">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:37.504" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:37.506" starttime="20200115 17:16:37.502"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:37.507" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:37.507" starttime="20200115 17:16:37.507"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user}, "harvest_id": "1", "lot_no": "19902"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:37.508" level="INFO">${data} = {"bc_user": "123456", "harvest_id": "1", "lot_no": "19902"}</msg>
<status status="PASS" endtime="20200115 17:16:37.508" starttime="20200115 17:16:37.508"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/queryMainpage</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:37.510" level="INFO">POST Request using : uri=/queryMainpage, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456", "harvest_id": "1", "lot_no": "19902"} 
json=None</msg>
<msg timestamp="20200115 17:16:37.513" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:39.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:39.723" starttime="20200115 17:16:37.509"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:39.724" level="INFO">${json} = {u'message': {u'planting_type': u'nil', u'Harvestlast_producttotal': 600, u'harvestlast_productunit': u'\u0e1c\u0e25', u'startplanting_date': u'2018-08-04', u'plant_name': u'\u0e2a\u0e27\u0e19', u'har...</msg>
<status status="PASS" endtime="20200115 17:16:39.724" starttime="20200115 17:16:39.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:39.725" level="INFO">{u'message': {u'planting_type': u'nil', u'Harvestlast_producttotal': 600, u'harvestlast_productunit': u'\u0e1c\u0e25', u'startplanting_date': u'2018-08-04', u'plant_name': u'\u0e2a\u0e27\u0e19', u'harvest_date': u'2020-12-20', u'product_unit': u'\u0e1c\u0e25', u'Soldlast_producttotal': 0, u'sold_date': u'2019-10-11', u'plant_date': u'2018-08-04', u'planting_images': u'/home/sampran/images.jp', u'status_organic': u'\u0e2d\u0e34\u0e19\u0e17\u0e23\u0e35\u0e22\u0e4c', u'lots': u'nil', u'join_date': u'nil', u'group_fammer': u'\u0e44\u0e23\u0e48\u0e2a\u0e21\u0e0a\u0e32\u0e22', u'source': u'nil', u'harvestlast_date': u'2020-12-20', u'harvest_hash': u'26866cd19a75623380adf0b5c4f11eadd4a5c4bf4e1acb2036fdd8e2170c30ea', u'process_harvest_images': u'cp/git/stock/produck1.png', u'production_seccess_percent': 0, u'planyesr_hash': u'5cb7b2e28d443b75aea0db76e3715e6a5ce3d4c0c409acd526f4efc058fdf554', u'location': u'\u0e1b\u0e48\u0e32\u0e40\u0e14\u0e47\u0e07\u0e41\u0e01\u0e48\u0e07\u0e01\u0e23\u0e30\u0e08\u0e32\u0e19\u0e40\u0e1e\u0e0a\u0e23\u0e1a\u0e38\u0e23\u0e35', u'product_totald': 1200, u'selling': [{u'selling_date': u'2019-10-11', u'selling_amount': 50, u'selling_grade': u'sold_grade_a', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 30, u'selling_grade': u'sold_grade_b', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 20, u'selling_grade': u'sold_grade_c', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 50, u'selling_grade': u'sold_grade_d', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 50, u'selling_grade': u'sold_grade_e', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 50, u'selling_grade': u'sold_grade_a', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 30, u'selling_grade': u'sold_grade_b', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 20, u'selling_grade': u'sold_grade_c', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 50, u'selling_grade': u'sold_grade_d', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}, {u'selling_date': u'2019-10-11', u'selling_amount': 50, u'selling_grade': u'sold_grade_e', u'selling_unit': u'nil', u'selling_market_place': u'darkmarket'}], u'endosrer': u'nil', u'garden_status_product': u'\u0e21\u0e35', u'checklast_date': u'2019-11-18', u'transport_date': u'nil', u'product_total_good': 1000, u'harvest_prediction': u'2019-10-19', u'harvest': [{u'harvest_status': u'\u0e04\u0e07\u0e04\u0e49\u0e32\u0e07', u'harvest_amount': 600, u'harvest_date': u'2020-12-20'}, {u'harvest_status': u'\u0e04\u0e07\u0e04\u0e49\u0e32\u0e07', u'harvest_amount': 600, u'harvest_date': u'2020-12-20'}], u'farmer_name': u'JoJo', u'total_amount': 1200, u'garden_hash': u'6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b', u'endorser': u'nil', u'garden_name': u'\u0e25\u0e33\u0e44\u0e22', u'product_image': u'nil', u'planting_hash': u'472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2'}, u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:39.725" starttime="20200115 17:16:39.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:39.729" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:39.729" starttime="20200115 17:16:39.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:39.729" level="INFO">{"bc_user": "123456", "harvest_id": "1", "lot_no": "19902"}</msg>
<status status="PASS" endtime="20200115 17:16:39.730" starttime="20200115 17:16:39.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:39.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:39.731" starttime="20200115 17:16:39.730"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:39.732" starttime="20200115 17:16:37.500"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:39.732" critical="yes" starttime="20200115 17:16:37.500"></status>
</test>
<test id="s1-t13" name="Test Post Doc queryPlantHistory">
<kw name="POST Doc queryPlantHistory">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>url</arg>
<arg>${URL_GET}</arg>
</arguments>
<msg timestamp="20200115 17:16:39.737" level="INFO">Creating Session using : alias=url, url=http://localhost:7777, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200115 17:16:39.738" starttime="20200115 17:16:39.737"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>apikey=${jwt_token2}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200115 17:16:39.740" level="INFO">${headers} = {u'Content-Type': u'application/json', u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1'}</msg>
<status status="PASS" endtime="20200115 17:16:39.741" starttime="20200115 17:16:39.738"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"bc_user": ${bc_user},"hash_planting": "472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200115 17:16:39.741" level="INFO">${data} = {"bc_user": "123456","hash_planting": "472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2"}</msg>
<status status="PASS" endtime="20200115 17:16:39.741" starttime="20200115 17:16:39.741"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>url</arg>
<arg>/queryPlantHistory</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200115 17:16:39.743" level="INFO">POST Request using : uri=/queryPlantHistory, files=None, params=None, timeout=None, allow_redirects=True
headers={u'apikey': u'558344f429d66e42b53ff6449710cea0f79211c2163d3d92b4180eaee3b6afd1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1', 'Connection': 'keep-alive', u'Content-Type': u'application/json'} 
data={"bc_user": "123456","hash_planting": "472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2"} 
json=None</msg>
<msg timestamp="20200115 17:16:39.744" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200115 17:16:41.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:41.968" starttime="20200115 17:16:39.742"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20200115 17:16:41.971" level="INFO">${json} = {u'message': {u'production_activities': [{u'activities_type': u'\u0e01\u0e32\u0e23\u0e14\u0e39\u0e41\u0e25', u'activities_tool': u'\u0e1d\u0e31\u0e01\u0e1a\u0e31\u0e27', u'activities_name': u'\u0e23\u...</msg>
<status status="PASS" endtime="20200115 17:16:41.971" starttime="20200115 17:16:41.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<msg timestamp="20200115 17:16:41.972" level="INFO">{u'message': {u'production_activities': [{u'activities_type': u'\u0e01\u0e32\u0e23\u0e14\u0e39\u0e41\u0e25', u'activities_tool': u'\u0e1d\u0e31\u0e01\u0e1a\u0e31\u0e27', u'activities_name': u'\u0e23\u0e14\u0e19\u0e49\u0e33', u'activities_date': u'2018-08-04'}], u'selling': [{u'activities_type': u'\u0e01\u0e32\u0e23\u0e02\u0e32\u0e22', u'activities_tool': u'\u0e01\u0e23\u0e30\u0e2a\u0e2d\u0e1a', u'activities_name': u'\u0e02\u0e32\u0e22', u'activities_date': u'2019-10-11'}, {u'activities_type': u'\u0e01\u0e32\u0e23\u0e02\u0e32\u0e22', u'activities_tool': u'\u0e01\u0e23\u0e30\u0e2a\u0e2d\u0e1a', u'activities_name': u'\u0e02\u0e32\u0e22', u'activities_date': u'2019-10-11'}], u'harvest': [{u'activities_type': u'\u0e01\u0e32\u0e23\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27', u'activities_tool': u'\u0e23\u0e16\u0e44\u0e16', u'activities_name': u'\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27', u'activities_date': u'2020-12-20'}, {u'activities_type': u'\u0e01\u0e32\u0e23\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27', u'activities_tool': u'\u0e23\u0e16\u0e44\u0e16', u'activities_name': u'\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27', u'activities_date': u'2020-12-20'}]}, u'statusCode': 200}</msg>
<status status="PASS" endtime="20200115 17:16:41.973" starttime="20200115 17:16:41.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200115 17:16:41.974" level="INFO">&lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200115 17:16:41.974" starttime="20200115 17:16:41.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20200115 17:16:41.974" level="INFO">{"bc_user": "123456","hash_planting": "472b01093cf63449a189e5b5e08ce325346094eb83b90d3304a92659415870e2"}</msg>
<status status="PASS" endtime="20200115 17:16:41.974" starttime="20200115 17:16:41.974"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200115 17:16:41.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200115 17:16:41.976" starttime="20200115 17:16:41.974"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:41.976" starttime="20200115 17:16:39.735"></status>
</kw>
<status status="PASS" endtime="20200115 17:16:41.977" critical="yes" starttime="20200115 17:16:39.732"></status>
</test>
<status status="PASS" endtime="20200115 17:16:41.980" starttime="20200115 17:15:10.873"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="13">Critical Tests</stat>
<stat fail="0" pass="13">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Testsampran" pass="13">Testsampran</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
